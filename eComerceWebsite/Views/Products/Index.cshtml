@model ProductCatalogViewModel

@{
    ViewData["Title"] = "Product Catalog";
}

<h1>Product Catalog</h1>

@if (TempData["Message"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["Message"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<p>
    <a asp-action="Create" asp-controller="Products">Create Product</a>
</p>

@if (Model.Products.Count() != 0)
{
    <table class="table table-dark table-hover">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Products[0].ProductID)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Products[0].ProductName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Products[0].Rating)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Products[0].ProductType)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Products[0].ProductCategoryID)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Products[0].ProductDescription)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Products[0].ProductPrice)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (Products item in Model.Products)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.ProductID)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ProductName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Rating)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ProductType)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ProductCategoryID)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ProductDescription)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ProductPrice)
                    </td>
                    <td>
                        <a class="btn btn-primary" asp-action="Edit" asp-route-id="@item.ProductID">Edit</a>
                        <a class="btn btn-secondary" asp-action="Details" asp-route-id="@item.ProductID">Details</a>
                        <a class="btn btn-danger" asp-action="Delete" asp-route-id="@item.ProductID">Delete</a>
                        <a class="btn btn-success" asp-controller="Cart" asp-action="Add" asp-route-id="@item.ProductID">Add to Cart</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

else
{
    <h2>There are no games for this page.</h2>
}

<nav aria-label="Product Catalog Pages">
    <ul class="pagination">
        @for (int i = 1; i <= Model.LastPage; i++){

            if (i == Model.CurrentPage){
                <li class="page-item active">
                    <a class="page-link">@i</a>
                </li>
            }

            else
            {
                <li class="page-item">
                    <a class="page-link" asp-action="Index" asp-route-id="@i">@i</a>
                </li>
            }
            
        }
    </ul>
</nav>

